# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $mod2 Mod1
set $control ~/.i3/workspace_controller.py
set $rofi "rofi -show run -font 'snap 10' -color-normal '#000000,#ffffff,#222222,#44bbff,#ffffff' -color-window '#000000,#ffffff'"


# Hybrid colors
set $black	#002B36
set $white	#839496
set $gray	#CCCCCC
set $darkgray	#666666
set $green 	#799F26
set $blue	#4D73AA
set $purple	#8473A7
set $red	#B58900
set $orange	#E59847
set $cyan	#2AA198
set $dark	#00252E

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font pango:Ubuntu, Light 11
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+r exec $rofi
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+Mod1+p exec --no-startup-id i3-dmenu-desktop

# dynamic tagging feature
# bindsym $mod+t exec ~/.i3/get_workspace_options.py | dmenu -b | ~/.i3/go_to_workspace.py
# bindsym $mod+Shift+t exec ~/.i3/get_workspace_options.py | dmenu -b | ~/.i3/move_to_workspace.py
bindsym $mod+t exec $control dynamic go
bindsym $mod+Shift+t exec $control dynamic move

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# change focus with tab keys
bindsym Mod1+Tab focus right
bindsym Mod1+Shift+Tab focus left

# alternatively, you can use the cursor keys:
bindsym $mod+Left exec $control prev go
bindsym $mod+Right exec $control next go
bindsym $mod+Up exec $control up go
bindsym $mod+Down exec $control down go

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left exec $control prev move
bindsym $mod+Shift+Right exec $control next move
bindsym $mod+Shift+Up exec $control up move
bindsym $mod+Shift+Down exec $control down move

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen
bindsym $mod+g fullscreen global

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 exec $control go 1
bindsym $mod+2 exec $control go 2
bindsym $mod+3 exec $control go 3
bindsym $mod+4 exec $control go 4
bindsym $mod+5 exec $control go 5
bindsym $mod+6 exec $control go 6
bindsym $mod+7 exec $control go 7
bindsym $mod+8 exec $control go 8
bindsym $mod+9 exec $control go 9
bindsym $mod+0 exec $control go 0

# move focused container to workspace
bindsym $mod+Shift+1 exec $control move 1
bindsym $mod+Shift+2 exec $control move 2
bindsym $mod+Shift+3 exec $control move 3
bindsym $mod+Shift+4 exec $control move 4
bindsym $mod+Shift+5 exec $control move 5
bindsym $mod+Shift+6 exec $control move 6
bindsym $mod+Shift+7 exec $control move 7
bindsym $mod+Shift+8 exec $control move 8
bindsym $mod+Shift+9 exec $control move 9
bindsym $mod+Shift+0 exec $control move 0

# move workspace between outputs
bindsym $mod+y move workspace to output left

# move to last workspace
bindsym $mod+z workspace back_and_forth

# lock computer
bindsym --release $mod+Control+Shift+l exec i3lock
bindsym --release $mod+Control+Shift+s exec i3lock && systemctl suspend

# toggle border
bindsym $mod+b exec i3-msg border toggle

# boder mode
new_window 1pixel

# new workspace layout mode
workspace_layout default

# gaps
#gaps inner 20
#gaps outer 20

# reload the configuration file
bindsym $mod+Shift+v reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 3 px or 3 ppt
        bindsym k resize grow height 3 px or 3 ppt
        bindsym l resize shrink height 3 px or 3 ppt
        bindsym semicolon resize grow width 3 px or 3 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 3 px or 3 ppt
        bindsym Down resize grow height 3 px or 3 ppt
        bindsym Up resize shrink height 3 px or 3 ppt
        bindsym Right resize grow width 3 px or 3 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+p mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks #-c /home/sands/.i3/i3blocks.conf
        position bottom
        tray_output primary
        colors {
                statusline	#999999
                background	$black

                # Colors            border      backgr.     text
                focused_workspace	$white	 	$white		$black
                active_workspace	#073642 	#073642 	#696f89
                inactive_workspace	#073642 	#073642     $white
                urgent_workspace  	$orange		$orange		$dark
        }
}

exec gnome-settings-daemon

bindsym $mod+control+Down exec synclient TouchpadOff=1
bindsym $mod+control+Up exec synclient TouchpadOff=0

# Screenshot
bindsym $mod+Print exec gnome-screenshot -ai
bindsym $mod+Shift+Print exec gnome-screenshot -i

# Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness

bindsym $mod+control+1 exec xrandr --output eDP-1 --brightness 1.20
bindsym $mod+control+2 exec xrandr --output eDP-1 --brightness 1.00
bindsym $mod+control+3 exec xrandr --output eDP-1 --brightness 0.90
bindsym $mod+control+4 exec xrandr --output eDP-1 --brightness 0.85
bindsym $mod+control+5 exec xrandr --output eDP-1 --brightness 0.80
bindsym $mod+control+6 exec xrandr --output eDP-1 --brightness 0.75
bindsym $mod+control+7 exec xrandr --output eDP-1 --brightness 0.70
bindsym $mod+control+8 exec xrandr --output eDP-1 --brightness 0.65
bindsym $mod+control+9 exec xrandr --output eDP-1 --brightness 0.65
bindsym $mod+control+0 exec xrandr --output eDP-1 --brightness 0.20

# volume
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
# granular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 30%- && pkill -RTMIN+1 i3blocks
# mute -- not really, but drop 100% volume
bindsym XF86AudioMute exec amixer -D pulse sset Master 100%- && pkill -RTMIN+1 i3blocks



# other keys
bindsym XF86Calculator exec gnome-calculator
bindsym XF86Explorer exec google-chrome
#bindsym XF86Mail exec thunderbird -compose
bindsym XF86HomePage exec nemo
bindsym Print exec scrot '%Y-%m-%d_%T_scrot.png' -e 'mv $f ~/Pictures/screenshots/'
# media keys
bindsym $mod+Home exec curl http://localhost:2000/command/default/playpause
bindsym $mod+Next exec curl http://localhost:2000/command/default/prev
bindsym $mod+Prior exec curl http://localhost:2000/command/default/next
# screen layout keys

bindsym $mod+control+Shift+m exec xrandr -s 1920x1080
bindsym $mod+control+Shift+h exec xrandr -s 2560x1440

# startup programs
# exec pulseaudio --start
exec /home/sands/.i3/update_background
#exec --no-startup-id i3-msg 'workspace 0; exec geary'
exec --no-startup-id i3-msg 'workspace 0; exec keepass'
exec clipit
exec CopyAgent
#exec udiskie --tray
#exec xflux -l -38.14 -g 144.35
exec xscreensaver -no-splash
#exec conky
exec pa-applet
exec nm-applet
exec megasync
exec amixer sset Master 20%
exec pasystray
#exec --no-startup-id i3-msg 'workspace 1; exec google-chrome'
#exec --no-startup-id compton -b --config /home/sands/.i3/compton.conf

# open certain windows in floating mode
for_window [class="(?i)gnome-calculator"] floating enable
for_window [class="(?i)lighthouse"] floating enable
for_window [window_role="(?i)pop-up"] floating enable

#class                  border  backgr. text    indicator
client.focused			$white  $white  $dark    $dark
client.unfocused		$dark   $dark   $white   $white
client.focused_inactive	$dark   $dark   $white   $dark
client.urgent			$orange $orange $dark    $white


mode "mouse" {

    # set your three speeds here

    set $slow 2
    set $medium 8
    set $quick 32
    set $fast 128
    set $superfast 512

    # Mouse movement (slow/fine-tuned) -- vim keybindings

    bindsym h exec xdotool mousemove_relative -- -$slow 0
    bindsym j exec xdotool mousemove_relative 0 $slow
    bindsym k exec xdotool mousemove_relative -- 0 -$slow
    bindsym l exec xdotool mousemove_relative $slow 0

    # Mouse movement (slow/fine-tuned) -- arrow keys

    bindsym Left exec xdotool mousemove_relative -- -$slow 0
    bindsym Down exec xdotool mousemove_relative 0 $slow
    bindsym Up exec xdotool mousemove_relative -- 0 -$slow
    bindsym Right exec xdotool mousemove_relative $slow 0

    # Mouse movement (mediumer) -- vim keybindings

    bindsym Shift+h exec xdotool mousemove_relative -- -$medium 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $medium
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$medium
    bindsym Shift+l exec xdotool mousemove_relative $medium 0

    # Mouse movement (mediumer) -- arrow keys

    bindsym Shift+Left exec xdotool mousemove_relative -- -$medium 0
    bindsym Shift+Down exec xdotool mousemove_relative 0 $medium
    bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$medium
    bindsym Shift+Right exec xdotool mousemove_relative $medium 0

    # Mouse movement (quick) -- vim keybindings

    bindsym control+h exec xdotool mousemove_relative -- -$quick 0
    bindsym control+j exec xdotool mousemove_relative 0 $quick
    bindsym control+k exec xdotool mousemove_relative -- 0 -$quick
    bindsym control+l exec xdotool mousemove_relative $quick 0

    # Mouse movement (quick) -- arrow keys

    bindsym control+Left exec xdotool mousemove_relative -- -$quick 0
    bindsym control+Down exec xdotool mousemove_relative 0 $quick
    bindsym control+Up exec xdotool mousemove_relative -- 0 -$quick
    bindsym control+Right exec xdotool mousemove_relative $quick 0

    # Mouse movement (fast) -- vim keybindings

    bindsym Shift+control+h exec xdotool mousemove_relative -- -$fast 0
    bindsym Shift+control+j exec xdotool mousemove_relative 0 $fast
    bindsym Shift+control+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym Shift+control+l exec xdotool mousemove_relative $fast 0

    # Mouse movement (fast) -- arrow keys

    bindsym Shift+control+Left exec xdotool mousemove_relative -- -$fast 0
    bindsym Shift+control+Down exec xdotool mousemove_relative 0 $fast
    bindsym Shift+control+Up exec xdotool mousemove_relative -- 0 -$fast
    bindsym Shift+control+Right exec xdotool mousemove_relative $fast 0

    # Mouse movement (superfast) -- vim keybindings

    bindsym Shift+$mod+control+h exec xdotool mousemove_relative -- -$superfast 0
    bindsym Shift+$mod+control+j exec xdotool mousemove_relative 0 $superfast
    bindsym Shift+$mod+control+k exec xdotool mousemove_relative -- 0 -$superfast
    bindsym Shift+$mod+control+l exec xdotool mousemove_relative $superfast 0

    # Mouse movement (superfast) -- arrow keys

    bindsym Shift+$mod+control+Left exec xdotool mousemove_relative -- -$superfast 0
    bindsym Shift+$mod+control+Down exec xdotool mousemove_relative 0 $superfast
    bindsym Shift+$mod+control+Up exec xdotool mousemove_relative -- 0 -$superfast
    bindsym Shift+$mod+control+Right exec xdotool mousemove_relative $superfast 0


    # Left Click
    bindsym f exec xdotool click 1

    # Middle Click
    bindsym d exec xdotool click 2

    # Right Click
    bindsym s exec xdotool click 3

    # Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

    # Middle Click-and-drag
    bindsym Shift+d exec xdotool mousedown 2

    # Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

    # Left Drag release
    bindsym control+f exec xdotool mouseup 1

    # Middle Drag release
    bindsym control+d exec xdotool mouseup 2

    # Right Drag release
    bindsym control+s exec xdotool mouseup 3


    # return to normal keybindings -- IMPORTANT!!
    bindsym Escape mode "default"
}

bindsym $mod+control+Shift+m mode "mouse"
